name: Update DAGs and Deploy

on:
  push:
    branches:
      - main
    paths:
      - dags/**

jobs:
  update-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Netbird
        run: |
          sudo apt-get update -qq && sudo apt-get install -y curl jq
          curl -fsSL https://pkgs.netbird.io/install.sh | sh
          
      - name: Connect to Netbird
        run: |
          sudo netbird up --setup-key=${{ secrets.NETBIRD_SETUP_KEY }}

      - name: Wait for Netbird to connect
        run: |
            while [ -z "$(sudo netbird status | grep 'Management: Connected')" ]; do
            echo "Waiting for Netbird to connect..."
            sleep 5
            done

      - name: SSH and Pull Latest Changes
        run: |
          sshpass -p "${{ secrets.CENTERM_PASS }}" ssh -o StrictHostKeyChecking=no ${{ secrets.CENTERM_USER }}@${{ secrets.CENTERM_HOST }} -p ${{ secrets.CENTERM_PORT }} \
          "cd ${{ secrets.CENTERM_AIRFLOW_DIR }} && git pull --rebase"
          
      - name: Disconnect from Netbird
        run: netbird down
          
      - name: Fetch Peers
        id: fetch_peers
        run: |
          response=$(curl -s -X GET https://api.netbird.io/api/peers \
          -H 'Accept: application/json' \
          -H "Authorization: Token ${{ secrets.NETBIRD_TOKEN }}")
          echo "$response" > peers.json
          echo "::set-output name=peers::$(cat peers.json)"
  
      - name: Delete Non-VN Peers
        if: always()
        run: |
          peers=$(cat peers.json)
          for id in $(echo "$peers" | jq -r '.[] | select(.country_code != "VN") | .id'); do
            echo "Deleting peer with id: $id"
            curl -X DELETE https://api.netbird.io/api/peers/$id \
            -H "Authorization: Token ${{ secrets.NETBIRD_TOKEN }}"
          done
          rm peers.json
